"""upgrade location string len

Revision ID: 7329ef02837b
Revises: 
Create Date: 2021-03-31 11:50:44.346748

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '7329ef02837b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('courses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseName', sa.String(length=40), nullable=False),
    sa.Column('address', sa.String(length=100), nullable=False),
    sa.Column('location', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=5000), nullable=True),
    sa.Column('imageURL', sa.Text(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('courseName')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userName', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashedPassword', sa.String(length=255), nullable=False),
    sa.Column('profileImageURL', sa.String(length=255), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('userName')
    )
    op.create_table('teeboxes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('courseId', sa.Integer(), nullable=False),
    sa.Column('teeboxName', sa.String(length=30), nullable=False),
    sa.Column('frontYardage', sa.Integer(), nullable=True),
    sa.Column('backYardage', sa.Integer(), nullable=True),
    sa.Column('slope', sa.Integer(), nullable=False),
    sa.Column('rating', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['courseId'], ['courses.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('holes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teeboxId', sa.Integer(), nullable=False),
    sa.Column('holeNumber', sa.Integer(), nullable=False),
    sa.Column('par', sa.Integer(), nullable=False),
    sa.Column('yardage', sa.Integer(), nullable=False),
    sa.Column('handicap', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['teeboxId'], ['teeboxes.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rounds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('userId', sa.Integer(), nullable=False),
    sa.Column('teeboxId', sa.Integer(), nullable=False),
    sa.Column('roundDate', sa.DateTime(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['teeboxId'], ['teeboxes.id'], ),
    sa.ForeignKeyConstraint(['userId'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scores',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('roundId', sa.Integer(), nullable=False),
    sa.Column('holeId', sa.Integer(), nullable=False),
    sa.Column('score', sa.Integer(), nullable=False),
    sa.Column('numPutts', sa.Integer(), nullable=True),
    sa.Column('fairway', sa.Boolean(), nullable=True),
    sa.Column('createdAt', sa.DateTime(), nullable=True),
    sa.Column('updatedAt', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['holeId'], ['holes.id'], ),
    sa.ForeignKeyConstraint(['roundId'], ['rounds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('scores')
    op.drop_table('rounds')
    op.drop_table('holes')
    op.drop_table('teeboxes')
    op.drop_table('users')
    op.drop_table('courses')
    # ### end Alembic commands ###
